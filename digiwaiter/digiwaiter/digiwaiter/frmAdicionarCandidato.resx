<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AACs2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb
        /v+s2/7/hb7+/4jA/v6Oxf7plcr/cwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKzb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb
        /v+s2/7/rNv+/6zb/v+Fvv7/hb7+/4W+/v+Fvv7/kcj8wwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAArNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb
        /v+s2/7/rNv+/6zb/v+s2/7/rNv+/4W+/v+Fvv7/hb7+/4W+/v+Fvv7/ksb/vAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACs2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb
        /v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/hb7+/4W+/v+Fvv7/hb7+/4W+/v+Fvv7/k8n/qgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKzb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb
        /v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+Fvv7/hb7+/4W+/v+Fvv7/hb7+/4W+
        /v+Fv/7/lcr/jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArNv+/6zb/v+s2/7/rNv+/6zb
        /v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/vqs2v7Rrdv+zIrC/vqFvv7/hb7+/4W+
        /v+Fvv7/hb7+/4W+/v+Gv/7/l8z/bgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACs2/7/rNv+/6zb
        /v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7xqtv/KgAAAAAAAAAAAAAAAJbL
        /2uJwP78hb7+/4W+/v+Fvv7/hb7+/4W+/v+IwP7+mcz/VQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKzb
        /v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/6va/q4AAAAAAAAAAAAA
        AAAAAAAAAAAAAJXK/zCLw/70hb7+/4W+/v+Fvv7/hb7+/4W+/v+IwP39lMr/PgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACs2/2NrNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+2ZnM
        /wUAAAAAAAAAAAAAAAAAAAAAAAAAAJzV/xKQxv7hhb7+/4W+/v+Fvv7/hb7+/4W+/v+Kwv76msr/KwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALPm/wqs2/7crNv+/6zb/v+s2/7/rNv+/6zb
        /v+s2/7/rdv+xqzc/3ur2/93k8j/tpPK/6OUzv8fAAAAAP///wKRx/zFhb7+/4W+/v+Fvv7/hb7+/4W+
        /v+Lw/71o8z/GQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK3c/0Gs2/7+rNv+/6zb
        /v+s2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+Fvv7/hb7+/4vC/veAv/8EAAAAAAAAAACVyf+Yhr/+/4W+
        /v+Fvv7/hb7+/4W+/v+RyPzHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKzc
        /Zes2/7/rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/rNv+/4W+/v+Fvv7/hb7+/5jI/yoAAAAAAAAAAAAA
        AACVzP9qiMH+/YW+/v+Fvv7/hb7+/4/F/uUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAttv/B6zc/aas2/7+rNv+/6zb/v+s2/7/rNv+/6zb/v+s2/7/hb7+/4W+/v+NxP7tAAAAAAAA
        AAAAAAAAAAAAAAAAAACayv8/i8L++IW+/v+Fvv7/lsr/fAAAAAAAAAAAAAAAAAAAAADOzq0f0sysh9HN
        q7bRzaq70c2qu9HNqrvRzaq70c2qu8/OrsTNzrPQzM200szNtNLMzbTSzM200szNtNKuo4r3r6OK9a+i
        hu6voYXtr6GF7a+hhe2voYXtr6GF7a+hhe2voobur6OK9a+iiPGvoobqs6eMx7+yljgAAAAAz8qqMNLM
        q/HRzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/6aW
        fP+mlnz/ppZ8/6aWfP+mlnz/ppZ8/6aWfP+mlnz/ppZ8/6aWfP+mlnz/ppZ8/6aWfP+mlnz/qZp+/rmt
        j1TRy6u80cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HM
        q//RzKv/ppZ8/6aWfP+mlnz/ppZ8/6aWfP+mlnz/ppZ8/6aWfP+mlnz/ppZ8/6aWfP+mlnz/ppZ8/6aW
        fP+mlnz/r6GF7dHMq+7RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HM
        q//RzKv/0cyr/9HMq/+mlnz/ppZ8/6aWfP+mlnz/ppZ8/6aWfP+mlnz/ppZ8/6aWfP+mlnz/ppZ8/6aW
        fP+mlnz/ppZ8/6aWfP+pmX7+z8qqMNLLrUTd1r9w5+DQ/+fg0P/n4ND/5+DQ/+fg0P/n4ND/5+DQ/+fg
        0P/n4ND/5+DQ/+fg0P/n4ND/5+DQ/8W+nv/Fvp7/xb6e/8W+nv/Fvp7/xb6e/8W+nv/Fvp7/xb6e/8W+
        nv/Fvp7/xb6e/8W+nv/DuqCuuK2RdrmtkFcAAAAAAAAAAPHj4xLu6N377ujd/+7o3f/u6N3/7ujd/+7o
        3f/u6N3/7ujd/+7o3f/u6N3/7ujd/+7o3f/u6N3/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HM
        q//RzKv/0cyr/9HMq//RzKv/0sys/+DYwSEAAAAAAAAAAAAAAAAAAAAAAAAAAO7o3r/u6N3/7ujd/+7o
        3f/u6N3/7ujd/+7o3f/u6N3/7ujd/+7o3f/u6N3/7ujd/+7o3f/RzKv/0cyr/9HMq//RzKv/0cyr/9HM
        q//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//X0rXuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7ufebO7o
        3f/u6N3/6OLT/9XRs//n4tH/7ujd/+7o3f/u6N3/7ujd/+7o3f/u6N3/7ujd/9HMq//RzKv/0cyr/9HM
        q//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9zWvqkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADj4+MJ7und4+7o3f/m4M//0cyr/9XPsf/t5tv/7ujd/+7o3f/u6N3/7ujd/+7o3f/u6N3/0cyr/9HM
        q//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//VzrD82dnMFAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADt6N5k7ujd/+7o3f/Z1Ln/0cyr/9rUuv/t59v/7ujd/+7o3f/u6N3/7ujd/+7o
        3f/RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9vXvp4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wHu6Nyp7ujd/+vm2f/V0LL/0cyr/9bRtP/r5dj/7ujd/+7o
        3f/u6N3/7ujd/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//Y0rjl//+/BAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOrq1Qzu6N3R7ujd/+vl2P/Y0rf/0cyr/+Te
        y//t59v/39rF/+Hbxv/t59v/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/1tCy9t7e
        yBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPHj4xLt6N297ujd/+7o
        3P/p49X/7ujd/+fh0f/RzKv/0cyr/+fg0P/RzKv/0cyr/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9fS
        tfHh28IqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        zAXt6N2P7ujd++7o3f/u6N3/7ujd/+bh0f/m4M//7efc/9HMq//RzKv/0cyr/9HMq//RzKv/0cyr/9LM
        rP/b1bzM5uazCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADr690m7+ndqu7o3fru6N3/7ujd/+7o3f/u6N3/0cyr/9HMq//RzKv/0cyr/9LM
        rP/Z07fi3trARQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8OHhEe7p3Vvv6N2d7ufet+rk1fvUzrH/19G269nU
        uNnd176U3t7FHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0cyr76ma
        fv4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0MusYtDM
        q9vRzKv9p5d8/6udgvq2q5CeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADRzKt50cyr/dHMq/+mlnz/p5d8/7Oni8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAP/wAAB/8AAAP/AAAB/wAAAP8AAAB/AAOAPwAHwB/4A+AP+AAQB/wA
        DAf+AA4H/gAfB4AAAAEAAAAAAAAAAAAAAAAAAAAAwAAAA+AAAAfgAAAH4AAAB/AAAA/wAAAP+AAAH/wA
        AD/+AAB//4AB///gB////n////gf///4H/8=
</value>
  </data>
</root>